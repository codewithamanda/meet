{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\n/*globals window __webpack_hash__ */\nif (module.hot) {\n  var lastData;\n\n  var upToDate = function upToDate() {\n    return lastData.indexOf(__webpack_hash__) >= 0;\n  };\n\n  var check = function check() {\n    module.hot.check(true, function (err, updatedModules) {\n      if (err) {\n        if (module.hot.status() in {\n          abort: 1,\n          fail: 1\n        }) {\n          console.warn(\"[HMR] Cannot apply update. Need to do a full reload!\");\n          console.warn(\"[HMR] \" + err.stack || err.message);\n          window.location.reload();\n        } else {\n          console.warn(\"[HMR] Update failed: \" + err.stack || err.message);\n        }\n\n        return;\n      }\n\n      if (!updatedModules) {\n        console.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\n        console.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\n        window.location.reload();\n        return;\n      }\n\n      if (!upToDate()) {\n        check();\n      }\n\n      require(\"./log-apply-result\")(updatedModules, updatedModules);\n\n      if (upToDate()) {\n        console.log(\"[HMR] App is up to date.\");\n      }\n    });\n  };\n\n  var addEventListener = window.addEventListener ? function (eventName, listener) {\n    window.addEventListener(eventName, listener, false);\n  } : function (eventName, listener) {\n    window.attachEvent(\"on\" + eventName, listener);\n  };\n  addEventListener(\"message\", function (event) {\n    if (typeof event.data === \"string\" && event.data.indexOf(\"webpackHotUpdate\") === 0) {\n      lastData = event.data;\n\n      if (!upToDate() && module.hot.status() === \"idle\") {\n        console.log(\"[HMR] Checking for updates on the server...\");\n        check();\n      }\n    }\n  });\n  console.log(\"[HMR] Waiting for update signal from WDS...\");\n} else {\n  throw new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}","map":{"version":3,"sources":["/Users/amanda/meet/node_modules/webpack/hot/dev-server.js"],"names":["module","hot","lastData","upToDate","indexOf","__webpack_hash__","check","err","updatedModules","status","abort","fail","console","warn","stack","message","window","location","reload","require","log","addEventListener","eventName","listener","attachEvent","event","data","Error"],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA,IAAGA,MAAM,CAACC,GAAV,EAAe;AACd,MAAIC,QAAJ;;AACA,MAAIC,QAAQ,GAAG,SAASA,QAAT,GAAoB;AAClC,WAAOD,QAAQ,CAACE,OAAT,CAAiBC,gBAAjB,KAAsC,CAA7C;AACA,GAFD;;AAGA,MAAIC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC5BN,IAAAA,MAAM,CAACC,GAAP,CAAWK,KAAX,CAAiB,IAAjB,EAAuB,UAASC,GAAT,EAAcC,cAAd,EAA8B;AACpD,UAAGD,GAAH,EAAQ;AACP,YAAGP,MAAM,CAACC,GAAP,CAAWQ,MAAX,MAAuB;AACxBC,UAAAA,KAAK,EAAE,CADiB;AAExBC,UAAAA,IAAI,EAAE;AAFkB,SAA1B,EAGI;AACHC,UAAAA,OAAO,CAACC,IAAR,CAAa,sDAAb;AACAD,UAAAA,OAAO,CAACC,IAAR,CAAa,WAAWN,GAAG,CAACO,KAAf,IAAwBP,GAAG,CAACQ,OAAzC;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA,SAPD,MAOO;AACNN,UAAAA,OAAO,CAACC,IAAR,CAAa,0BAA0BN,GAAG,CAACO,KAA9B,IAAuCP,GAAG,CAACQ,OAAxD;AACA;;AACD;AACA;;AAED,UAAG,CAACP,cAAJ,EAAoB;AACnBI,QAAAA,OAAO,CAACC,IAAR,CAAa,qDAAb;AACAD,QAAAA,OAAO,CAACC,IAAR,CAAa,+DAAb;AACAG,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA;AACA;;AAED,UAAG,CAACf,QAAQ,EAAZ,EAAgB;AACfG,QAAAA,KAAK;AACL;;AAEDa,MAAAA,OAAO,CAAC,oBAAD,CAAP,CAA8BX,cAA9B,EAA8CA,cAA9C;;AAEA,UAAGL,QAAQ,EAAX,EAAe;AACdS,QAAAA,OAAO,CAACQ,GAAR,CAAY,0BAAZ;AACA;AAED,KAhCD;AAiCA,GAlCD;;AAmCA,MAAIC,gBAAgB,GAAGL,MAAM,CAACK,gBAAP,GAA0B,UAASC,SAAT,EAAoBC,QAApB,EAA8B;AAC9EP,IAAAA,MAAM,CAACK,gBAAP,CAAwBC,SAAxB,EAAmCC,QAAnC,EAA6C,KAA7C;AACA,GAFsB,GAEnB,UAASD,SAAT,EAAoBC,QAApB,EAA8B;AACjCP,IAAAA,MAAM,CAACQ,WAAP,CAAmB,OAAOF,SAA1B,EAAqCC,QAArC;AACA,GAJD;AAKAF,EAAAA,gBAAgB,CAAC,SAAD,EAAY,UAASI,KAAT,EAAgB;AAC3C,QAAG,OAAOA,KAAK,CAACC,IAAb,KAAsB,QAAtB,IAAkCD,KAAK,CAACC,IAAN,CAAWtB,OAAX,CAAmB,kBAAnB,MAA2C,CAAhF,EAAmF;AAClFF,MAAAA,QAAQ,GAAGuB,KAAK,CAACC,IAAjB;;AACA,UAAG,CAACvB,QAAQ,EAAT,IAAeH,MAAM,CAACC,GAAP,CAAWQ,MAAX,OAAwB,MAA1C,EAAkD;AACjDG,QAAAA,OAAO,CAACQ,GAAR,CAAY,6CAAZ;AACAd,QAAAA,KAAK;AACL;AACD;AACD,GARe,CAAhB;AASAM,EAAAA,OAAO,CAACQ,GAAR,CAAY,6CAAZ;AACA,CAvDD,MAuDO;AACN,QAAM,IAAIO,KAAJ,CAAU,2CAAV,CAAN;AACA","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n/*globals window __webpack_hash__ */\r\nif(module.hot) {\r\n\tvar lastData;\r\n\tvar upToDate = function upToDate() {\r\n\t\treturn lastData.indexOf(__webpack_hash__) >= 0;\r\n\t};\r\n\tvar check = function check() {\r\n\t\tmodule.hot.check(true, function(err, updatedModules) {\r\n\t\t\tif(err) {\r\n\t\t\t\tif(module.hot.status() in {\r\n\t\t\t\t\t\tabort: 1,\r\n\t\t\t\t\t\tfail: 1\r\n\t\t\t\t\t}) {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Cannot apply update. Need to do a full reload!\");\r\n\t\t\t\t\tconsole.warn(\"[HMR] \" + err.stack || err.message);\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(\"[HMR] Update failed: \" + err.stack || err.message);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!updatedModules) {\r\n\t\t\t\tconsole.warn(\"[HMR] Cannot find update. Need to do a full reload!\");\r\n\t\t\t\tconsole.warn(\"[HMR] (Probably because of restarting the webpack-dev-server)\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!upToDate()) {\r\n\t\t\t\tcheck();\r\n\t\t\t}\r\n\r\n\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\r\n\r\n\t\t\tif(upToDate()) {\r\n\t\t\t\tconsole.log(\"[HMR] App is up to date.\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t};\r\n\tvar addEventListener = window.addEventListener ? function(eventName, listener) {\r\n\t\twindow.addEventListener(eventName, listener, false);\r\n\t} : function(eventName, listener) {\r\n\t\twindow.attachEvent(\"on\" + eventName, listener);\r\n\t};\r\n\taddEventListener(\"message\", function(event) {\r\n\t\tif(typeof event.data === \"string\" && event.data.indexOf(\"webpackHotUpdate\") === 0) {\r\n\t\t\tlastData = event.data;\r\n\t\t\tif(!upToDate() && module.hot.status() === \"idle\") {\r\n\t\t\t\tconsole.log(\"[HMR] Checking for updates on the server...\");\r\n\t\t\t\tcheck();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tconsole.log(\"[HMR] Waiting for update signal from WDS...\");\r\n} else {\r\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\r\n}\r\n"]},"metadata":{},"sourceType":"script"}