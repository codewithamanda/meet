{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict'; // WARNING: this code is untranspiled and is used in browser too.\n// Please make sure any changes are in ES5 or contribute a Babel compile step.\n// Some custom utilities to prettify Webpack output.\n// This is quite hacky and hopefully won't be needed when Webpack fixes this.\n// https://github.com/webpack/webpack/issues/2878\n\nvar friendlySyntaxErrorLabel = 'Syntax error:';\n\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n} // Cleans up webpack error messages.\n\n\nfunction formatMessage(message) {\n  var lines = message.split('\\n'); // Remove webpack-specific loader notation from filename.\n  // Before:\n  // ./~/css-loader!./~/postcss-loader!./src/App.css\n  // After:\n  // ./src/App.css\n\n  if (lines[0].lastIndexOf('!') !== -1) {\n    lines[0] = lines[0].substr(lines[0].lastIndexOf('!') + 1);\n  } // line #0 is filename\n  // line #1 is the main error message\n\n\n  if (!lines[0] || !lines[1]) {\n    return lines.join('\\n');\n  } // Cleans up verbose \"module not found\" messages for files and packages.\n\n\n  if (lines[1].indexOf('Module not found: ') === 0) {\n    lines = [lines[0], // Clean up message because \"Module not found: \" is descriptive enough.\n    lines[1].replace('Cannot resolve \\'file\\' or \\'directory\\' ', '').replace('Cannot resolve module ', '').replace('Error: ', ''), // Skip all irrelevant lines.\n    // (For some reason they only appear on the client in browser.)\n    '', lines[lines.length - 1] // error location is the last line\n    ];\n  } // Cleans up syntax error messages.\n\n\n  if (lines[1].indexOf('Module build failed: ') === 0) {\n    // For some reason, on the client messages appear duplicated:\n    // https://github.com/webpack/webpack/issues/3008\n    // This won't happen in Node but since we share this helpers,\n    // we will dedupe them right here. We will ignore all lines\n    // after the original error message text is repeated the second time.\n    var errorText = lines[1].substr('Module build failed: '.length);\n    var cleanedLines = [];\n    var hasReachedDuplicateMessage = false; // Gather lines until we reach the beginning of duplicate message.\n\n    lines.forEach(function (line, index) {\n      if ( // First time it occurs is fine.\n      index !== 1 && // line.endsWith(errorText)\n      line.length >= errorText.length && line.indexOf(errorText) === line.length - errorText.length) {\n        // We see the same error message for the second time!\n        // Filter out repeated error message and everything after it.\n        hasReachedDuplicateMessage = true;\n      }\n\n      if (!hasReachedDuplicateMessage || // Print last line anyway because it contains the source location\n      index === lines.length - 1) {\n        // This line is OK to appear in the output.\n        cleanedLines.push(line);\n      }\n    }); // We are clean now!\n\n    lines = cleanedLines; // Finally, brush up the error message a little.\n\n    lines[1] = lines[1].replace('Module build failed: SyntaxError:', friendlySyntaxErrorLabel);\n  } // Reassemble the message.\n\n\n  message = lines.join('\\n'); // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by WebPack. For more information see\n  // https://github.com/facebookincubator/create-react-app/pull/1050\n\n  message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s\\)]*(\\n|$)/gm, ''); // at ... ...:x:y\n\n  return message;\n}\n\nfunction formatWebpackMessages(json) {\n  var formattedErrors = json.errors.map(function (message) {\n    return 'Error in ' + formatMessage(message);\n  });\n  var formattedWarnings = json.warnings.map(function (message) {\n    return 'Warning in ' + formatMessage(message);\n  });\n  var result = {\n    errors: formattedErrors,\n    warnings: formattedWarnings\n  };\n\n  if (result.errors.some(isLikelyASyntaxError)) {\n    // If there are any syntax errors, show just them.\n    // This prevents a confusing ESLint parsing error\n    // preceding a much more useful Babel syntax error.\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n  }\n\n  return result;\n}\n\nmodule.exports = formatWebpackMessages;","map":{"version":3,"sources":["/Users/amanda/meet/node_modules/react-dev-utils/formatWebpackMessages.js"],"names":["friendlySyntaxErrorLabel","isLikelyASyntaxError","message","indexOf","formatMessage","lines","split","lastIndexOf","substr","join","replace","length","errorText","cleanedLines","hasReachedDuplicateMessage","forEach","line","index","push","formatWebpackMessages","json","formattedErrors","errors","map","formattedWarnings","warnings","result","some","filter","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n// WARNING: this code is untranspiled and is used in browser too.\n// Please make sure any changes are in ES5 or contribute a Babel compile step.\n\n// Some custom utilities to prettify Webpack output.\n// This is quite hacky and hopefully won't be needed when Webpack fixes this.\n// https://github.com/webpack/webpack/issues/2878\n\nvar friendlySyntaxErrorLabel = 'Syntax error:';\n\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n}\n\n// Cleans up webpack error messages.\nfunction formatMessage(message) {\n  var lines = message.split('\\n');\n\n  // Remove webpack-specific loader notation from filename.\n  // Before:\n  // ./~/css-loader!./~/postcss-loader!./src/App.css\n  // After:\n  // ./src/App.css\n  if (lines[0].lastIndexOf('!') !== -1) {\n    lines[0] = lines[0].substr(lines[0].lastIndexOf('!') + 1);\n  }\n\n  // line #0 is filename\n  // line #1 is the main error message\n  if (!lines[0] || !lines[1]) {\n    return lines.join('\\n');\n  }\n\n  // Cleans up verbose \"module not found\" messages for files and packages.\n  if (lines[1].indexOf('Module not found: ') === 0) {\n    lines = [\n      lines[0],\n      // Clean up message because \"Module not found: \" is descriptive enough.\n      lines[1].replace(\n        'Cannot resolve \\'file\\' or \\'directory\\' ', ''\n      ).replace(\n        'Cannot resolve module ', ''\n      ).replace(\n        'Error: ', ''\n      ),\n      // Skip all irrelevant lines.\n      // (For some reason they only appear on the client in browser.)\n      '',\n      lines[lines.length - 1] // error location is the last line\n    ]\n  }\n\n  // Cleans up syntax error messages.\n  if (lines[1].indexOf('Module build failed: ') === 0) {\n    // For some reason, on the client messages appear duplicated:\n    // https://github.com/webpack/webpack/issues/3008\n    // This won't happen in Node but since we share this helpers,\n    // we will dedupe them right here. We will ignore all lines\n    // after the original error message text is repeated the second time.\n    var errorText = lines[1].substr('Module build failed: '.length);\n    var cleanedLines = [];\n    var hasReachedDuplicateMessage = false;\n    // Gather lines until we reach the beginning of duplicate message.\n    lines.forEach(function(line, index) {\n      if (\n        // First time it occurs is fine.\n        index !== 1 &&\n        // line.endsWith(errorText)\n        line.length >= errorText.length &&\n        line.indexOf(errorText) === line.length - errorText.length\n      ) {\n        // We see the same error message for the second time!\n        // Filter out repeated error message and everything after it.\n        hasReachedDuplicateMessage = true;\n      }\n      if (\n        !hasReachedDuplicateMessage ||\n        // Print last line anyway because it contains the source location\n        index === lines.length - 1\n      ) {\n        // This line is OK to appear in the output.\n        cleanedLines.push(line);\n      }\n    });\n    // We are clean now!\n    lines = cleanedLines;\n    // Finally, brush up the error message a little.\n    lines[1] = lines[1].replace(\n      'Module build failed: SyntaxError:',\n      friendlySyntaxErrorLabel\n    );\n  }\n\n  // Reassemble the message.\n  message = lines.join('\\n');\n  // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by WebPack. For more information see\n  // https://github.com/facebookincubator/create-react-app/pull/1050\n  message = message.replace(\n    /^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s\\)]*(\\n|$)/gm, ''\n  ); // at ... ...:x:y\n\n  return message;\n}\n\nfunction formatWebpackMessages(json) {\n  var formattedErrors = json.errors.map(function(message) {\n    return 'Error in ' + formatMessage(message)\n  });\n  var formattedWarnings = json.warnings.map(function(message) {\n    return 'Warning in ' + formatMessage(message)\n  });\n  var result = {\n    errors: formattedErrors,\n    warnings: formattedWarnings\n  };\n  if (result.errors.some(isLikelyASyntaxError)) {\n    // If there are any syntax errors, show just them.\n    // This prevents a confusing ESLint parsing error\n    // preceding a much more useful Babel syntax error.\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n  }\n  return result;\n}\n\nmodule.exports = formatWebpackMessages;\n"]},"metadata":{},"sourceType":"script"}