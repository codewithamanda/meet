{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","event","collapsed","handleClick","setState","this","props","Card","className","Header","as","summary","Body","start","dateTime","timeZone","location","href","htmlLink","target","rel","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","style","display","NumberOfEvents","htmlFor","eventCounter","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","numberOfEvents","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.11f67ced.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport './App.css';\n\nclass Event extends Component {\n\tstate = {\n\t\tevent: {},\n\t\tcollapsed: true,\n\t};\n\n\thandleClick = () => {\n\t\tthis.setState({\n\t\t\tcollapsed: !this.state.collapsed,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { event } = this.props;\n\t\tconst { collapsed } = this.state;\n\t\treturn (\n\t\t\t<Card className='event'>\n\t\t\t\t<Card.Header className='summary' as='h4'>\n\t\t\t\t\t{event.summary}\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body className='event-body'>\n\t\t\t\t\t<p className=\"start-date\">\n\t\t\t\t\t\t{event.start.dateTime} ({event.start.timeZone})\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p className='location'>\n\t\t\t\t\t\t@{event.summary} | {event.location}\n\t\t\t\t\t</p>\n\n\t\t\t\t\t{!collapsed && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`extra-details ${\n\t\t\t\t\t\t\t\tthis.state.collapsed ? 'hide' : 'show'\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<h6 className='about'>About Event</h6>\n\t\t\t\t\t\t\t<a href={event.htmlLink} target='_blank' rel='noreferrer'>\n\t\t\t\t\t\t\t\tSee details on Google calendar\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<p className='event-description'>{event.description}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n          <button\n            className={`${collapsed ? 'show' : 'hide'}-details`}\n            onClick={this.handleClick}\n          >\n            {collapsed ? 'Show Details' : 'Hide Details'}\n          </button>\n\n          \n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className='EventList'>\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n// import { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n      }\n\n      handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n          return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n          query: value,\n          suggestions,\n        });\n      }\n\n      handleItemClicked = (suggestion) => {\n        this.setState({\n          query: suggestion,\n          showSuggestions: false\n        });\n        \n        this.props.updateEvents(suggestion);\n      }\n\n  render() {\n    return (\n      <div className='CitySearch'>\n        <input\n          type='text'\n          className='city'\n          placeholder='Search for a city'\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n\n        <ul className='suggestions' style={this.state.showSuggestions ? {}: { display: 'none' }}>\n\n          {this.state.suggestions.map((suggestion) => (\n\n          <li\n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}\n          >{suggestion}</li>\n          ))}\n\n          <li onClick={() => this.handleItemClicked('all')}>\n            <b>See All Cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }  \n}\n\n\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n\n  render() {\n\n    return (\n      <div className='EventNumberComponent'>\n\n      <label htmlFor='numberOfEventsInput'> Number of Events on Page:\n\n      <input\n        id='numberOfEventsInput'\n        type='number'\n        className='numberInput'\n        value={this.props.eventCounter}\n       />\n       \n      </label>\n\n      </div>\n    )\n  }\n}\n\nexport default NumberOfEvents;\n","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n    },\n    \"organizer\": {\n        \"email\": \"fullstackwebdev@careerfoundry.com\",\n        \"self\": true\n       },\n       \"start\": {\n        \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n        \"timeZone\": \"Europe/Berlin\"\n       },\n       \"end\": {\n        \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n        \"timeZone\": \"Europe/Berlin\"\n       },\n       \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n       \"originalStartTime\": {\n        \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n        \"timeZone\": \"Europe/Berlin\"\n       },\n       \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n       \"sequence\": 0,\n       \"reminders\": {\n        \"useDefault\": true\n       },\n       \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"organizer\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"start\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n         \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n         \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n       }\n];\n\nexport { mockData };\n","import { mockData } from './mock-data';\nimport axios from 'axios';\n\nimport NProgress from 'nprogress';\n/**\n * \n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n export const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n  };\n\n  const checkToken = async (accessToken) => {\n    const result = await fetch(\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n      .then((res) => res.json())\n      .catch((error) => error.json());\n  \n    return result;\n  };\n\n  const removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n      var newurl =\n        window.location.protocol +\n        \"//\" +\n        window.location.host +\n        window.location.pathname;\n      window.history.pushState(\"\", \"\", newurl);\n    } else {\n      newurl = window.location.protocol + \"//\" + window.location.host;\n      window.history.pushState(\"\", \"\", newurl);\n    }\n  };\n\n  const getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n      'https://8m47bijskh.execute-api.us-west-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .catch((error) => error);\n  \n    access_token && localStorage.setItem(\"access_token\", access_token);\n  \n    return access_token;\n  };\n\n  export const getEvents = async () => {\n    NProgress.start();\n  \n    if (window.location.href.startsWith(\"http://localhost\")) {\n      NProgress.done();\n      return mockData;\n    }\n  \n  \n    const token = await getAccessToken();\n  \n    if (token) {\n      removeQuery();\n      const url = 'https://8m47bijskh.execute-api.us-west-2.amazonaws.com/dev/api/get-events' + '/' + token;\n      const result = await axios.get(url);\n      if (result.data) {\n        var locations = extractLocations(result.data.events);\n        localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n        localStorage.setItem(\"locations\", JSON.stringify(locations));\n      }\n      NProgress.done();\n      return result.data.events;\n    }\n  };\n\n  export const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n      await localStorage.removeItem(\"access_token\");\n      const searchParams = new URLSearchParams(window.location.search);\n      const code = await searchParams.get(\"code\");\n      if (!code) {\n        const results = await axios.get(\n          \"https://8m47bijskh.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\"\n        );\n        const { authUrl } = results.data;\n        return (window.location.href = authUrl);\n      }\n      return code && getToken(code);\n    }\n    return accessToken;\n  }","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport './App.css';\nimport './nprogress.css';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n  }\n  // constructor(props) {\n  // super(props)\n\n  // this.state = {\n  //   events: [],\n  //   locations: [],\n  //   numberOfEvents: 32,\n  // }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  componentDidMount() {\n    getEvents().then((events) => {\n      this.setState({ events, locations: extractLocations(events) });\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n   \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}